[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "vremenar"
description = ""
dynamic = ["version"]
license = { text = "AGPL-3.0-or-later" }
authors = [{ name = "Tadej Novak", email = "tadej@tano.si" }]
requires-python = ">= 3.11"
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Web Environment",
  "Framework :: FastAPI",
  "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
dependencies = [
  "fastapi == 0.115.*",
  "redis[hiredis] == 5.2.*",
  "httpx == 0.28.*",
  "astral == 3.2.*",
  "asyncstdlib",
  "gunicorn",
  "uvicorn",
]

[dependency-groups]
dev = [
  "coverage[toml]",
  "gevent",
  "mypy == 1.14.1",
  "pre-commit",
  "pre-commit-hooks == 5.0.*",
  "pytest >= 8.0",
  "pytest-asyncio ==0.26.*",
  "pytest-cov",
  "requests",
  "ruff == 0.8.4",
  "types-python-dateutil",
  "types-redis",
]

[project.scripts]
vremenar = "vremenar.cli:main"

[tool.hatch.version]
path = "src/vremenar/__init__.py"

[tool.coverage.run]
branch = true
concurrency = ["thread", "gevent"]
source = ["src/vremenar"]
omit = ["src/vremenar/cli.py", "src/vremenar/worker.py"]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "if TYPE_CHECKING:",
  "if self.debug:",
  "if debug:",
  "raise NotImplementedError",
  "if __name__ == .__main__.:",
]
ignore_errors = true
omit = ["tests/*"]

[tool.ruff]
src = ["src"]
target-version = "py313"
line-length = 88

[tool.ruff.lint]
select = [
  "F",     # pyflakes
  "E",     # pycodestyle
  "W",     # pycodestyle
  "C90",   # mccabe (complexity)
  "I",     # isort
  "N",     # pep8-naming
  "D",     # pydocstyle
  "UP",    # pyupgrade
  "YTT",   # flake8-2020
  "ANN",   # flake8-annotations
  "ASYNC", # flake8-async
  "S",     # flakey-bandit
  "BLE",   # flake8-blind-except
  "FBT",   # flake8-boolean-trap
  "B",     # flake8-bugbear
  "A",     # flake8-builtins
  "COM",   # flake8-commas
  "C4",    # flake8-comprehensions
  "DTZ",   # flake8-datetimez
  "EM",    # flake8-errmsg
  "EXE",   # flake8-executable
  "FA",    # flake8-future-annotations
  "ISC",   # flake8-implicit-str-concat
  "ICN",   # flake8-import-conventions
  "LOG",   # flake8-logging
  "G",     # flake8-logging-format
  "PIE",   # flake8-pie
  "T20",   # flake8-print
  "PT",    # flake8-pytest-style
  "Q",     # flake8-quotes
  "RET",   # flake8-return
  "SLF",   # flake8-self
  "SIM",   # flake8-simplify
  "TID",   # flake8-tidy-imports
  "TC",    # flake8-type-checking
  "INT",   # flake8-gettext
  "ARG",   # flake8-unused-arguments
  "PTH",   # flake8-use-pathlib
  "PL",    # pylint
  "TRY",   # tryceratops
  "FLY",   # flynt
  "FAST",  # fastapi
  "PERF",  # perflint
  "FURB",  # refurb
  "DOC",   # pydoclint
  "RUF",   # ruff
]
ignore = [
  "PLR2004", # magic-value-comparison (not wanted)
  "D203",    # one-blank-line-before-class (conflicting with no-blank-line-before-class)
  "D213",    # multi-line-summary-second-line (conflicting with multi-line-summary-first-line)
  "FBT001",  # boolean-positional-arg-in-function-definition (not wanted)
  "FBT002",  # boolean-default-value-in-function-definition (not wanted)
]

[tool.ruff.lint.per-file-ignores]
"**/tests/*" = ["S101"]

[tool.mypy]
plugins = "pydantic.mypy"
strict = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = "astral.sun"
ignore_errors = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--cov=vremenar --cov-config=.coveragerc --cov-report=term-missing:skip-covered --cov-report xml --cov-report html:coverage --junitxml=junit.xml -o junit_family=legacy"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "session"
testpaths = ["tests"]
