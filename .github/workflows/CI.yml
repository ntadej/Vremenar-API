name: Continuous Integration
on: [push]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-14]
        python-version: ["3.11", "3.12", "3.13"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Start Redis
        uses: shogo82148/actions-setup-redis@v1
        with:
          redis-port: 6379
          redis-version: "6.x"
          auto-start: true

      - name: Set up uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}

      - name: Set up dependencies
        run: uv sync -p ${{ matrix.python-version }}

      - name: Run tests
        run: |
          uv run tests/fixtures/setup_fixtures.py
          uv run pytest -W error

      - name: Report coverage with Codecov
        if: github.event_name == 'push' && matrix.python-version == 3.11 && matrix.os == 'ubuntu-22.04'
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: unittests
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Override Coverage Source Path for Sonar
        if: matrix.python-version == 3.11 && matrix.os == 'ubuntu-22.04'
        run: sed -i "s/<source>\/home\/runner\/work\/Vremenar-API\/Vremenar-API<\/source>/<source>\/github\/workspace<\/source>/g" coverage.xml

      - name: SonarCloud Scan
        if: matrix.python-version == 3.11 && matrix.os == 'ubuntu-22.04'
        uses: SonarSource/sonarcloud-github-action@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy-staging:
    runs-on: ubuntu-22.04
    needs: test
    if: github.ref == 'refs/heads/main'
    environment: Staging

    steps:
      - name: Deploy
        run: |
          echo "Deploying to staging..."

  deploy-production:
    runs-on: ubuntu-22.04
    needs: test
    if: github.ref == 'refs/heads/deploy'
    environment: Production

    steps:
      - name: Deploy
        run: |
          echo "Deploying to production..."
