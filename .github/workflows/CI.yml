name: Continuous Integration
on: [push]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: [3.8, 3.9]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup Poetry
        uses: abatilo/actions-poetry@v2.1.0

      - name: Config Poetry
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true

      - name: Get full python version
        id: full-python-version
        run: |
          echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info[:3]))")

      - name: Set up cache
        uses: actions/cache@v2
        with:
          path: |
            .venv
            src/utils/.venv
          key: ${{ runner.os }}-venv-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-venv-${{ steps.full-python-version.outputs.version }}-

      - name: Setup utils
        run: |
          pushd src/utils
          poetry install
          popd

      # - name: Run utils
      #   run: |
      #     source src/utils/.venv/bin/activate
      #     src/utils/scripts/dwd_update.sh
      #     src/utils/scripts/dwd_cleanup.sh

      - name: Setup server
        run: |
          poetry install

      - name: Run tests
        run: |
          poetry run coverage run -m pytest

      - name: Report coverage with Codecov
        if: github.event_name == 'push' && matrix.python-version == 3.9 && matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
          flags: unittests
